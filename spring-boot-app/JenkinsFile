pipeline {
    agent any  // Runs directly on the Jenkins VM

    environment {
        DOCKER_IMAGE = "khushbu1216/spingboot:${BUILD_NUMBER}"
        GIT_REPO_NAME = "Ci-cd-with-jenkins-and-argocd"
        GIT_USER_NAME = "KhushbuTandel"
        MAVEN_HOME = "/opt/maven"  // Update this to the correct Maven path
        PATH = "${MAVEN_HOME}/bin:${env.PATH}"
    }

    stages {

        stage('Check Maven Version') {
            steps {
                // Ensure Maven is installed and accessible
                sh 'mvn -v'
            }
        }

        stage('Check Docker Version') {
            steps {
                // Ensure Docker is installed and accessible
                sh 'docker --version'
            }
        }

        stage('Checkout') {
            steps {
                sh 'echo passed'
                git branch: 'main', url: 'https://github.com/KhushbuTandel/Ci-cd-with-jenkins-and-argocd.git'
                sh 'ls -la' // Check if Jenkinsfile exists
            }
        }

        stage('Build and Test') {
            steps {
                sh '''
                    ls -ltr
                    cd spring-boot-app && mvn clean package
                '''
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh '''
                            echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USER" --password-stdin
                            docker build -t ${DOCKER_IMAGE} spring-boot-app  # Ensure correct directory
                            docker push ${DOCKER_IMAGE}
                        '''
                    }
                }
            }
        }

        stage('Update Deployment File') {
            steps {
                withCredentials([string(credentialsId: 'git-hub-token', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                        git config user.email "tandelkhushbu1216@gmail.com"
                        git config user.name "KhushbuTandel"
                        sed -i "s|image: .*|image: khushbu1216/spingboot:${BUILD_NUMBER}|g" spring-boot-app-manifests/deployment.yml
                        git add spring-boot-app-manifests/deployment.yml
                        git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                        git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                    '''
                }
            }
        }

    } // End of stages
} // End of pipeline
